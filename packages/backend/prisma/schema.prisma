generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id            String                     @id
  email         String                     @unique
  name          String
  password      String
  role          Role                       @default(USER)
  permissionsId String?
  createdAt     DateTime                   @default(now())
  updatedAt     DateTime                   @updatedAt
  disabledAt    DateTime?
  permissions   Permissions?               @relation(fields: [permissionsId], references: [id])
  annotations   AccompanimentAnnotations[]
  cancelations  Cancelations[]

  @@map("users")
}

model Permissions {
  id                        String   @id
  title                     String   @unique
  accessSchedules           Boolean  @default(false)
  createRequest             Boolean  @default(false)
  createSchedule            Boolean  @default(false)
  closeSchedule             Boolean  @default(false)
  manageInvoicesInSchedule  Boolean  @default(false)
  addExtraScheduledInvoices Boolean  @default(false)
  receiveSchedule           Boolean  @default(false)
  cancelSchedule            Boolean  @default(false)
  rescheduleSchedule        Boolean  @default(false)
  accessAccompaniments      Boolean  @default(false)
  manageAccompaniments      Boolean  @default(false)
  accessRepresentatives     Boolean  @default(false)
  viewValues                Boolean  @default(false)
  createdAt                 DateTime @default(now())
  updatedAt                 DateTime @updatedAt
  users                     Users[]

  @@map("permissions")
}

model Accompaniments {
  id                String                     @id
  number            Int
  sendedAt          DateTime?
  reviewedAt        DateTime?
  releasedAt        DateTime?
  expectedBillingAt DateTime?
  billingAt         DateTime?
  freeOnBoardAt     DateTime?
  schedulingAt      DateTime?
  finishedAt        DateTime?
  valueDelivered    Float?                     @default(0.0)
  invoiceId         String?                    @unique
  createdAt         DateTime                   @default(now())
  updatedAt         DateTime                   @updatedAt
  renewedAt         DateTime?
  accompanimentsId  String?                    @unique
  invoiceNumber     Int?
  invoiceProvider   Int?
  renewedFrom       Accompaniments?            @relation("renewed", fields: [accompanimentsId], references: [id])
  invoices          Invoices?                  @relation("accompanimentsToinvoices", fields: [invoiceId], references: [id])
  annotations       AccompanimentAnnotations[]
  renewedTo         Accompaniments?            @relation("renewed")
  cancelation       Cancelations?

  @@map("accompaniments")
}

model AccompanimentAnnotations {
  id              String         @id
  content         String
  createdAt       DateTime       @default(now())
  userId          String
  accompanimentId String
  accompaniment   Accompaniments @relation(fields: [accompanimentId], references: [id])
  user            Users          @relation(fields: [userId], references: [id])

  @@map("accompanimentAnnotations")
}

model Cancelations {
  accompanimentId String         @id
  motive          String
  userId          String
  createdAt       DateTime       @default(now())
  accompaniment   Accompaniments @relation(fields: [accompanimentId], references: [id])
  user            Users          @relation(fields: [userId], references: [id])

  @@map("cancelations")
}

model Schedules {
  id                String            @id
  dischargeTableId  String
  scheduleRequestId String?           @unique
  scheduledAt       DateTime?
  priority          Boolean           @default(false)
  shippingName      String?
  freightType       Freight?
  vehicleType       Vehicle?
  lecturer          String?
  driver            String?
  vehicleSize       Size?
  chargeType        Charge?
  palletized        Boolean?
  assistant         Boolean?
  pipeSize          Size?
  receiptPerInvoice Boolean?
  dischargeValue    Float?
  receiptValue      Float?
  paymentMethod     Receipt?
  closedAt          DateTime?
  receivedAt        DateTime?
  rescheduledAt     DateTime?
  createdAt         DateTime          @default(now())
  updatedAt         DateTime          @updatedAt
  canceledAt        DateTime?
  motive            String?
  schedulesId       String?           @unique
  dischargeTable    DischargeTable    @relation(fields: [dischargeTableId], references: [id])
  scheduleRequest   ScheduleRequests? @relation(fields: [scheduleRequestId], references: [id])
  rescheduledFrom   Schedules?        @relation("reschedule", fields: [schedulesId], references: [id])
  invoices          Invoices[]
  rescheduledTo     Schedules?        @relation("reschedule")

  @@map("schedules")
}

model ScheduleRequests {
  id            String     @id
  requestedDate DateTime?
  providerCode  Int?
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
  schedule      Schedules?

  @@map("scheduleRequests")
}

model Invoices {
  id             String          @id
  origin         InvoiceOrigin
  providerCode   Int
  number         Int
  value          Float?
  emittedAt      DateTime?
  key            String?
  weight         Float?
  volume         Float?
  cteNumber      Int?
  cteKey         String?
  dischargeValue Float?
  receiptValue   Float?
  divergence     Divergence?
  scheduleId     String?
  invoiceFileId  String?
  cteFileId      String?
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
  canceledAt     DateTime?
  importation    Boolean         @default(false)
  cteFile        Files?          @relation("invoice_cte_file", fields: [cteFileId], references: [id])
  invoiceFile    Files?          @relation("invoice_invoice_file", fields: [invoiceFileId], references: [id])
  schedule       Schedules?      @relation(fields: [scheduleId], references: [id])
  accompaniments Accompaniments? @relation("accompanimentsToinvoices")

  @@map("invoices")
}

model Files {
  id           String     @id
  filename     String
  originalname String
  ctes         Invoices[] @relation("invoice_cte_file")
  invoices     Invoices[] @relation("invoice_invoice_file")

  @@map("files")
}

model DischargeTable {
  id                                  String      @id
  smallPipe                           Float
  mediumPipe                          Float
  largePipe                           Float
  beatPalletizedWithAssistant         Float
  beatPalletizedWithoutAssistant      Float
  beatNonPalletizedWithAssistant      Float
  beatNonPalletizedWithoutAssistant   Float
  volumePalletizedWithAssistant       Float
  volumePalletizedWithoutAssistant    Float
  volumeNonPalletizedWithAssistant    Float
  volumeNonPalletizedWithoutAssistant Float
  createdAt                           DateTime    @default(now())
  schedules                           Schedules[]

  @@map("dischargeTable")
}

enum Role {
  USER
  ADMIN
}

enum Size {
  SMALL
  MEDIUM
  LARGE
}

enum Charge {
  BEAT
  VOLUME
  PIPE
}

enum Receipt {
  MONEY
  DEPOSIT
  PENDING
}

enum Freight {
  CIF
  FOB
}

enum Vehicle {
  EXTERNAL
  INTERNAL
}

enum Divergence {
  ADDED
  RECEIVED
  NOT_RECEIVED
  RESCHEDULED
}

enum InvoiceOrigin {
  SCHEDULE
  FOLLOWUP
}
